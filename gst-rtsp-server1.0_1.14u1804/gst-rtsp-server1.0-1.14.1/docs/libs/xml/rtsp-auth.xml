<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
]>
<refentry id="GstRTSPAuth">
<refmeta>
<refentrytitle role="top_of_page" id="GstRTSPAuth.top_of_page">GstRTSPAuth</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GST-RTSP-SERVER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstRTSPAuth</refname>
<refpurpose>Authentication and authorization</refpurpose>
</refnamediv>

<refsect1 id="GstRTSPAuth.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GstRTSPAuth"><returnvalue>GstRTSPAuth</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-new">gst_rtsp_auth_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GTlsCertificate"><returnvalue>GTlsCertificate</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-get-tls-certificate">gst_rtsp_auth_get_tls_certificate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-set-tls-certificate">gst_rtsp_auth_set_tls_certificate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GTlsDatabase"><returnvalue>GTlsDatabase</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-get-tls-database">gst_rtsp_auth_get_tls_database</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-set-tls-database">gst_rtsp_auth_set_tls_database</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GTlsAuthenticationMode"><returnvalue>GTlsAuthenticationMode</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-get-tls-authentication-mode">gst_rtsp_auth_get_tls_authentication_mode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-set-tls-authentication-mode">gst_rtsp_auth_set_tls_authentication_mode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-make-basic">gst_rtsp_auth_make_basic</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-add-basic">gst_rtsp_auth_add_basic</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-remove-basic">gst_rtsp_auth_remove_basic</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-check">gst_rtsp_auth_check</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstRTSPToken"><returnvalue>GstRTSPToken</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-get-default-token">gst_rtsp_auth_get_default_token</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-rtsp-auth-set-default-token">gst_rtsp_auth_set_default_token</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstRTSPAuth.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signals_return" colwidth="150px"/>
<colspec colname="signals_name" colwidth="300px"/>
<colspec colname="signals_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link></entry><entry role="signal_name"><link linkend="GstRTSPAuth-accept-certificate">accept-certificate</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstRTSPAuth.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstRTSPAuth-struct">GstRTSPAuth</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstRTSPAuthClass">GstRTSPAuthClass</link></entry></row>

<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-AUTH-CHECK-CONNECT:CAPS">GST_RTSP_AUTH_CHECK_CONNECT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-AUTH-CHECK-URL:CAPS">GST_RTSP_AUTH_CHECK_URL</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-AUTH-CHECK-MEDIA-FACTORY-ACCESS:CAPS">GST_RTSP_AUTH_CHECK_MEDIA_FACTORY_ACCESS</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-AUTH-CHECK-MEDIA-FACTORY-CONSTRUCT:CAPS">GST_RTSP_AUTH_CHECK_MEDIA_FACTORY_CONSTRUCT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-AUTH-CHECK-TRANSPORT-CLIENT-SETTINGS:CAPS">GST_RTSP_AUTH_CHECK_TRANSPORT_CLIENT_SETTINGS</link></entry></row>

<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-TOKEN-MEDIA-FACTORY-ROLE:CAPS">GST_RTSP_TOKEN_MEDIA_FACTORY_ROLE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-TOKEN-TRANSPORT-CLIENT-SETTINGS:CAPS">GST_RTSP_TOKEN_TRANSPORT_CLIENT_SETTINGS</link></entry></row>

<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-PERM-MEDIA-FACTORY-ACCESS:CAPS">GST_RTSP_PERM_MEDIA_FACTORY_ACCESS</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="GST-RTSP-PERM-MEDIA-FACTORY-CONSTRUCT:CAPS">GST_RTSP_PERM_MEDIA_FACTORY_CONSTRUCT</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstRTSPAuth.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GstRTSPAuth
</screen>
</refsect1>


<refsect1 id="GstRTSPAuth.description" role="desc">
<title role="desc.title">Description</title>
<para>The <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> object is responsible for checking if the current user is
allowed to perform requested actions. The default implementation has some
reasonable checks but subclasses can implement custom security policies.</para>
<para>A new auth object is made with <link linkend="gst-rtsp-auth-new"><function>gst_rtsp_auth_new()</function></link>. It is usually configured
on the <link linkend="GstRTSPServer"><type>GstRTSPServer</type></link> object.</para>
<para>The RTSP server will call <link linkend="gst-rtsp-auth-check"><function>gst_rtsp_auth_check()</function></link> with a string describing the
check to perform. The possible checks are prefixed with
GST_RTSP_AUTH_CHECK_*. Depending on the check, the default implementation
will use the current <link linkend="GstRTSPToken"><type>GstRTSPToken</type></link>, <link linkend="GstRTSPContext"><type>GstRTSPContext</type></link> and
<link linkend="GstRTSPPermissions"><type>GstRTSPPermissions</type></link> on the object to check if an operation is allowed.</para>
<para>The default <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> object has support for basic authentication. With
<link linkend="gst-rtsp-auth-add-basic"><function>gst_rtsp_auth_add_basic()</function></link> you can add a basic authentication string together
with the <link linkend="GstRTSPToken"><type>GstRTSPToken</type></link> that will become active when successfully
authenticated.</para>
<para>When a TLS certificate has been set with <link linkend="gst-rtsp-auth-set-tls-certificate"><function>gst_rtsp_auth_set_tls_certificate()</function></link>,
the default auth object will require the client to connect with a TLS
connection.</para>
<para>Last reviewed on 2013-07-16 (1.0.0)</para>

</refsect1>
<refsect1 id="GstRTSPAuth.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="gst-rtsp-auth-new" role="function">
<title>gst_rtsp_auth_new&#160;()</title>
<indexterm zone="gst-rtsp-auth-new"><primary>gst_rtsp_auth_new</primary></indexterm>
<programlisting language="C"><link linkend="GstRTSPAuth"><returnvalue>GstRTSPAuth</returnvalue></link>&#160;*
gst_rtsp_auth_new (<parameter><type>void</type></parameter>);</programlisting>
<para>Create a new <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> instance.</para>
<refsect3 id="gst-rtsp-auth-new.returns" role="returns">
<title>Returns</title>
<para>a new <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-get-tls-certificate" role="function">
<title>gst_rtsp_auth_get_tls_certificate&#160;()</title>
<indexterm zone="gst-rtsp-auth-get-tls-certificate"><primary>gst_rtsp_auth_get_tls_certificate</primary></indexterm>
<programlisting language="C"><link linkend="GTlsCertificate"><returnvalue>GTlsCertificate</returnvalue></link>&#160;*
gst_rtsp_auth_get_tls_certificate (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>);</programlisting>
<para>Get the <link linkend="GTlsCertificate"><type>GTlsCertificate</type></link> used for negotiating TLS <parameter>auth</parameter>
.</para>
<refsect3 id="gst-rtsp-auth-get-tls-certificate.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-rtsp-auth-get-tls-certificate.returns" role="returns">
<title>Returns</title>
<para>the <link linkend="GTlsCertificate"><type>GTlsCertificate</type></link> of <parameter>auth</parameter>
. <link linkend="g-object-unref"><function>g_object_unref()</function></link> after
usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-set-tls-certificate" role="function">
<title>gst_rtsp_auth_set_tls_certificate&#160;()</title>
<indexterm zone="gst-rtsp-auth-set-tls-certificate"><primary>gst_rtsp_auth_set_tls_certificate</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_rtsp_auth_set_tls_certificate (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>,
                                   <parameter><link linkend="GTlsCertificate"><type>GTlsCertificate</type></link> *cert</parameter>);</programlisting>
<para>Set the TLS certificate for the auth. Client connections will only
be accepted when TLS is negotiated.</para>
<refsect3 id="gst-rtsp-auth-set-tls-certificate.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cert</para></entry>
<entry role="parameter_description"><para>a <link linkend="GTlsCertificate"><type>GTlsCertificate</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-get-tls-database" role="function" condition="since:1.6">
<title>gst_rtsp_auth_get_tls_database&#160;()</title>
<indexterm zone="gst-rtsp-auth-get-tls-database" role="1.6"><primary>gst_rtsp_auth_get_tls_database</primary></indexterm>
<programlisting language="C"><link linkend="GTlsDatabase"><returnvalue>GTlsDatabase</returnvalue></link>&#160;*
gst_rtsp_auth_get_tls_database (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>);</programlisting>
<para>Get the <link linkend="GTlsDatabase"><type>GTlsDatabase</type></link> used for verifying client certificate.</para>
<refsect3 id="gst-rtsp-auth-get-tls-database.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-rtsp-auth-get-tls-database.returns" role="returns">
<title>Returns</title>
<para>the <link linkend="GTlsDatabase"><type>GTlsDatabase</type></link> of <parameter>auth</parameter>
. <link linkend="g-object-unref"><function>g_object_unref()</function></link> after
usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-rtsp-auth-set-tls-database" role="function">
<title>gst_rtsp_auth_set_tls_database&#160;()</title>
<indexterm zone="gst-rtsp-auth-set-tls-database"><primary>gst_rtsp_auth_set_tls_database</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_rtsp_auth_set_tls_database (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>,
                                <parameter><link linkend="GTlsDatabase"><type>GTlsDatabase</type></link> *database</parameter>);</programlisting>
<para>Sets the certificate database that is used to verify peer certificates.
If set to <link linkend="NULL:CAPS"><literal>NULL</literal></link> (the default), then peer certificate validation will always
set the <link linkend="G-TLS-CERTIFICATE-UNKNOWN-CA:CAPS"><literal>G_TLS_CERTIFICATE_UNKNOWN_CA</literal></link> error.</para>
<para>Since 1.6</para>
<refsect3 id="gst-rtsp-auth-set-tls-database.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>database</para></entry>
<entry role="parameter_description"><para>a <link linkend="GTlsDatabase"><type>GTlsDatabase</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-get-tls-authentication-mode" role="function">
<title>gst_rtsp_auth_get_tls_authentication_mode&#160;()</title>
<indexterm zone="gst-rtsp-auth-get-tls-authentication-mode"><primary>gst_rtsp_auth_get_tls_authentication_mode</primary></indexterm>
<programlisting language="C"><link linkend="GTlsAuthenticationMode"><returnvalue>GTlsAuthenticationMode</returnvalue></link>
gst_rtsp_auth_get_tls_authentication_mode
                               (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>);</programlisting>
<para>Get the <link linkend="GTlsAuthenticationMode"><type>GTlsAuthenticationMode</type></link>.</para>
<refsect3 id="gst-rtsp-auth-get-tls-authentication-mode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-rtsp-auth-get-tls-authentication-mode.returns" role="returns">
<title>Returns</title>
<para>the <link linkend="GTlsAuthenticationMode"><type>GTlsAuthenticationMode</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-set-tls-authentication-mode" role="function" condition="since:1.6">
<title>gst_rtsp_auth_set_tls_authentication_mode&#160;()</title>
<indexterm zone="gst-rtsp-auth-set-tls-authentication-mode" role="1.6"><primary>gst_rtsp_auth_set_tls_authentication_mode</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_rtsp_auth_set_tls_authentication_mode
                               (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>,
                                <parameter><link linkend="GTlsAuthenticationMode"><type>GTlsAuthenticationMode</type></link> mode</parameter>);</programlisting>
<para>The <link linkend="GTlsAuthenticationMode"><type>GTlsAuthenticationMode</type></link> to set on the underlying GTlsServerConnection.
When set to another value than <link linkend="G-TLS-AUTHENTICATION-NONE:CAPS"><literal>G_TLS_AUTHENTICATION_NONE</literal></link>,
<link linkend="GstRTSPAuth-accept-certificate"><type>“accept-certificate”</type></link> signal will be emitted and must be handled.</para>
<refsect3 id="gst-rtsp-auth-set-tls-authentication-mode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mode</para></entry>
<entry role="parameter_description"><para>a <link linkend="GTlsAuthenticationMode"><type>GTlsAuthenticationMode</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
<refsect2 id="gst-rtsp-auth-make-basic" role="function">
<title>gst_rtsp_auth_make_basic&#160;()</title>
<indexterm zone="gst-rtsp-auth-make-basic"><primary>gst_rtsp_auth_make_basic</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
gst_rtsp_auth_make_basic (<parameter>const <link linkend="gchar"><type>gchar</type></link> *user</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *pass</parameter>);</programlisting>
<para>Construct a Basic authorisation token from <parameter>user</parameter>
 and <parameter>pass</parameter>
.</para>
<refsect3 id="gst-rtsp-auth-make-basic.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>user</para></entry>
<entry role="parameter_description"><para>a userid</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pass</para></entry>
<entry role="parameter_description"><para>a password</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-rtsp-auth-make-basic.returns" role="returns">
<title>Returns</title>
<para>the base64 encoding of the string <parameter>user</parameter>
:<parameter>pass</parameter>
.
<link linkend="g-free"><function>g_free()</function></link> after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-add-basic" role="function">
<title>gst_rtsp_auth_add_basic&#160;()</title>
<indexterm zone="gst-rtsp-auth-add-basic"><primary>gst_rtsp_auth_add_basic</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_rtsp_auth_add_basic (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *basic</parameter>,
                         <parameter><link linkend="GstRTSPToken"><type>GstRTSPToken</type></link> *token</parameter>);</programlisting>
<para>Add a basic token for the default authentication algorithm that
enables the client with privileges listed in <parameter>token</parameter>
.</para>
<refsect3 id="gst-rtsp-auth-add-basic.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>basic</para></entry>
<entry role="parameter_description"><para>the basic token</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>token</para></entry>
<entry role="parameter_description"><para>authorisation token. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-remove-basic" role="function">
<title>gst_rtsp_auth_remove_basic&#160;()</title>
<indexterm zone="gst-rtsp-auth-remove-basic"><primary>gst_rtsp_auth_remove_basic</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_rtsp_auth_remove_basic (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>,
                            <parameter>const <link linkend="gchar"><type>gchar</type></link> *basic</parameter>);</programlisting>
<para>Removes <parameter>basic</parameter>
 authentication token.</para>
<refsect3 id="gst-rtsp-auth-remove-basic.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>basic</para></entry>
<entry role="parameter_description"><para>the basic token. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-check" role="function">
<title>gst_rtsp_auth_check&#160;()</title>
<indexterm zone="gst-rtsp-auth-check"><primary>gst_rtsp_auth_check</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_rtsp_auth_check (<parameter>const <link linkend="gchar"><type>gchar</type></link> *check</parameter>);</programlisting>
<para>Check if <parameter>check</parameter>
 is allowed in the current context.</para>
<refsect3 id="gst-rtsp-auth-check.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>check</para></entry>
<entry role="parameter_description"><para>the item to check</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-rtsp-auth-check.returns" role="returns">
<title>Returns</title>
<para> FALSE if check failed.</para>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-get-default-token" role="function">
<title>gst_rtsp_auth_get_default_token&#160;()</title>
<indexterm zone="gst-rtsp-auth-get-default-token"><primary>gst_rtsp_auth_get_default_token</primary></indexterm>
<programlisting language="C"><link linkend="GstRTSPToken"><returnvalue>GstRTSPToken</returnvalue></link>&#160;*
gst_rtsp_auth_get_default_token (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>);</programlisting>
<para>Get the default token for <parameter>auth</parameter>
. This token will be used for unauthenticated
users.</para>
<refsect3 id="gst-rtsp-auth-get-default-token.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-rtsp-auth-get-default-token.returns" role="returns">
<title>Returns</title>
<para>the <link linkend="GstRTSPToken"><type>GstRTSPToken</type></link> of <parameter>auth</parameter>
. <link linkend="gst-rtsp-token-unref"><function>gst_rtsp_token_unref()</function></link> after
usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-rtsp-auth-set-default-token" role="function">
<title>gst_rtsp_auth_set_default_token&#160;()</title>
<indexterm zone="gst-rtsp-auth-set-default-token"><primary>gst_rtsp_auth_set_default_token</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_rtsp_auth_set_default_token (<parameter><link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> *auth</parameter>,
                                 <parameter><link linkend="GstRTSPToken"><type>GstRTSPToken</type></link> *token</parameter>);</programlisting>
<para>Set the default <link linkend="GstRTSPToken"><type>GstRTSPToken</type></link> to <parameter>token</parameter>
 in <parameter>auth</parameter>
. The default token will
be used for unauthenticated users.</para>
<refsect3 id="gst-rtsp-auth-set-default-token.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>token</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPToken"><type>GstRTSPToken</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="GstRTSPAuth.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstRTSPAuth-struct" role="struct">
<title>struct GstRTSPAuth</title>
<indexterm zone="GstRTSPAuth-struct"><primary>GstRTSPAuth</primary></indexterm>
<programlisting language="C">struct GstRTSPAuth;</programlisting>
<para>The authentication structure.</para>
</refsect2>
<refsect2 id="GstRTSPAuthClass" role="struct">
<title>struct GstRTSPAuthClass</title>
<indexterm zone="GstRTSPAuthClass"><primary>GstRTSPAuthClass</primary></indexterm>
<programlisting language="C">struct GstRTSPAuthClass {
  GObjectClass  parent_class;

  gboolean           (*authenticate) (GstRTSPAuth *auth, GstRTSPContext *ctx);
  gboolean           (*check)        (GstRTSPAuth *auth, GstRTSPContext *ctx,
                                      const gchar *check);
  void               (*generate_authenticate_header) (GstRTSPAuth *auth, GstRTSPContext *ctx);
  gboolean           (*accept_certificate) (GstRTSPAuth *auth,
                                            GTlsConnection *connection,
                                            GTlsCertificate *peer_cert,
                                            GTlsCertificateFlags errors);
};
</programlisting>
<para>The authentication class.</para>
<refsect3 id="GstRTSPAuthClass.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstRTSPAuthClass.authenticate">authenticate</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>check the authentication of a client. The default implementation
checks if the authentication in the header matches one of the basic
authentication tokens. This function should set the authgroup field
in the context.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstRTSPAuthClass.check">check</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>check if a resource can be accessed. this function should
call authenticate to authenticate the client when needed. The method
should also construct and send an appropriate response message on
error.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstRTSPAuthClass.generate-authenticate-header">generate_authenticate_header</structfield>&#160;()</para></entry>
<entry /><entry />
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GstRTSPAuthClass.accept-certificate">accept_certificate</structfield>&#160;()</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="GST-RTSP-AUTH-CHECK-CONNECT:CAPS" role="macro">
<title>GST_RTSP_AUTH_CHECK_CONNECT</title>
<indexterm zone="GST-RTSP-AUTH-CHECK-CONNECT:CAPS"><primary>GST_RTSP_AUTH_CHECK_CONNECT</primary></indexterm>
<programlisting language="C">#define GST_RTSP_AUTH_CHECK_CONNECT                  "auth.check.connect"
</programlisting>
<para>Check a new connection</para>
</refsect2>
<refsect2 id="GST-RTSP-AUTH-CHECK-URL:CAPS" role="macro">
<title>GST_RTSP_AUTH_CHECK_URL</title>
<indexterm zone="GST-RTSP-AUTH-CHECK-URL:CAPS"><primary>GST_RTSP_AUTH_CHECK_URL</primary></indexterm>
<programlisting language="C">#define GST_RTSP_AUTH_CHECK_URL                      "auth.check.url"
</programlisting>
<para>Check the URL and methods</para>
</refsect2>
<refsect2 id="GST-RTSP-AUTH-CHECK-MEDIA-FACTORY-ACCESS:CAPS" role="macro">
<title>GST_RTSP_AUTH_CHECK_MEDIA_FACTORY_ACCESS</title>
<indexterm zone="GST-RTSP-AUTH-CHECK-MEDIA-FACTORY-ACCESS:CAPS"><primary>GST_RTSP_AUTH_CHECK_MEDIA_FACTORY_ACCESS</primary></indexterm>
<programlisting language="C">#define GST_RTSP_AUTH_CHECK_MEDIA_FACTORY_ACCESS     "auth.check.media.factory.access"
</programlisting>
<para>Check if access is allowed to a factory.
When access is not allowed an 404 Not Found is sent in the response.</para>
</refsect2>
<refsect2 id="GST-RTSP-AUTH-CHECK-MEDIA-FACTORY-CONSTRUCT:CAPS" role="macro">
<title>GST_RTSP_AUTH_CHECK_MEDIA_FACTORY_CONSTRUCT</title>
<indexterm zone="GST-RTSP-AUTH-CHECK-MEDIA-FACTORY-CONSTRUCT:CAPS"><primary>GST_RTSP_AUTH_CHECK_MEDIA_FACTORY_CONSTRUCT</primary></indexterm>
<programlisting language="C">#define GST_RTSP_AUTH_CHECK_MEDIA_FACTORY_CONSTRUCT  "auth.check.media.factory.construct"
</programlisting>
<para>Check if media can be constructed from a media factory
A response should be sent on error.</para>
</refsect2>
<refsect2 id="GST-RTSP-AUTH-CHECK-TRANSPORT-CLIENT-SETTINGS:CAPS" role="macro">
<title>GST_RTSP_AUTH_CHECK_TRANSPORT_CLIENT_SETTINGS</title>
<indexterm zone="GST-RTSP-AUTH-CHECK-TRANSPORT-CLIENT-SETTINGS:CAPS"><primary>GST_RTSP_AUTH_CHECK_TRANSPORT_CLIENT_SETTINGS</primary></indexterm>
<programlisting language="C">#define GST_RTSP_AUTH_CHECK_TRANSPORT_CLIENT_SETTINGS  "auth.check.transport.client-settings"
</programlisting>
<para>Check if the client can specify TTL, destination and
port pair in multicast. No response is sent when the check returns
<link linkend="FALSE:CAPS"><literal>FALSE</literal></link>.</para>
</refsect2>
<refsect2 id="GST-RTSP-TOKEN-MEDIA-FACTORY-ROLE:CAPS" role="macro">
<title>GST_RTSP_TOKEN_MEDIA_FACTORY_ROLE</title>
<indexterm zone="GST-RTSP-TOKEN-MEDIA-FACTORY-ROLE:CAPS"><primary>GST_RTSP_TOKEN_MEDIA_FACTORY_ROLE</primary></indexterm>
<programlisting language="C">#define GST_RTSP_TOKEN_MEDIA_FACTORY_ROLE      "media.factory.role"
</programlisting>
<para>G_TYPE_STRING, the role to use when dealing with media factories</para>
<para>The default <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link> object uses this string in the token to find the
role of the media factory. It will then retrieve the <link linkend="GstRTSPPermissions"><type>GstRTSPPermissions</type></link> of
the media factory and retrieve the role with the same name.</para>
</refsect2>
<refsect2 id="GST-RTSP-TOKEN-TRANSPORT-CLIENT-SETTINGS:CAPS" role="macro">
<title>GST_RTSP_TOKEN_TRANSPORT_CLIENT_SETTINGS</title>
<indexterm zone="GST-RTSP-TOKEN-TRANSPORT-CLIENT-SETTINGS:CAPS"><primary>GST_RTSP_TOKEN_TRANSPORT_CLIENT_SETTINGS</primary></indexterm>
<programlisting language="C">#define GST_RTSP_TOKEN_TRANSPORT_CLIENT_SETTINGS   "transport.client-settings"
</programlisting>
<para>G_TYPE_BOOLEAN, <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the client can specify TTL, destination and
    port pair in multicast.</para>
</refsect2>
<refsect2 id="GST-RTSP-PERM-MEDIA-FACTORY-ACCESS:CAPS" role="macro">
<title>GST_RTSP_PERM_MEDIA_FACTORY_ACCESS</title>
<indexterm zone="GST-RTSP-PERM-MEDIA-FACTORY-ACCESS:CAPS"><primary>GST_RTSP_PERM_MEDIA_FACTORY_ACCESS</primary></indexterm>
<programlisting language="C">#define GST_RTSP_PERM_MEDIA_FACTORY_ACCESS      "media.factory.access"
</programlisting>
<para>G_TYPE_BOOLEAN, <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the media can be accessed, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> will
return a 404 Not Found error when trying to access the media.</para>
</refsect2>
<refsect2 id="GST-RTSP-PERM-MEDIA-FACTORY-CONSTRUCT:CAPS" role="macro">
<title>GST_RTSP_PERM_MEDIA_FACTORY_CONSTRUCT</title>
<indexterm zone="GST-RTSP-PERM-MEDIA-FACTORY-CONSTRUCT:CAPS"><primary>GST_RTSP_PERM_MEDIA_FACTORY_CONSTRUCT</primary></indexterm>
<programlisting language="C">#define GST_RTSP_PERM_MEDIA_FACTORY_CONSTRUCT   "media.factory.construct"
</programlisting>
<para>G_TYPE_BOOLEAN, <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the media can be constructed, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> will
return a 404 Not Found error when trying to access the media.</para>
</refsect2>

</refsect1>
<refsect1 id="GstRTSPAuth.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GstRTSPAuth-accept-certificate" role="signal"><title>The <literal>“accept-certificate”</literal> signal</title>
<indexterm zone="GstRTSPAuth-accept-certificate" role="1.6"><primary>GstRTSPAuth::accept-certificate</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
user_function (<link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link>         *auth,
               <link linkend="GTlsConnection"><type>GTlsConnection</type></link>      *connection,
               <link linkend="GTlsCertificate"><type>GTlsCertificate</type></link>     *peer_cert,
               <link linkend="GTlsCertificateFlags"><type>GTlsCertificateFlags</type></link> errors,
               <link linkend="gpointer"><type>gpointer</type></link>             user_data)</programlisting>
<para>Emitted during the TLS handshake after the client certificate has
been received. See also <link linkend="gst-rtsp-auth-set-tls-authentication-mode"><function>gst_rtsp_auth_set_tls_authentication_mode()</function></link>.</para>
<refsect3 id="GstRTSPAuth-accept-certificate.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>auth</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstRTSPAuth"><type>GstRTSPAuth</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GTlsConnection"><type>GTlsConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>peer_cert</para></entry>
<entry role="parameter_description"><para>the peer's <link linkend="GTlsCertificate"><type>GTlsCertificate</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>errors</para></entry>
<entry role="parameter_description"><para>the problems with <parameter>peer_cert</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GstRTSPAuth-accept-certificate.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to accept <parameter>peer_cert</parameter>
(which will also
immediately end the signal emission). <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to allow the signal
emission to continue, which will cause the handshake to fail if
no one else overrides it.</para>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
<para role="since">Since: <link linkend="api-index-1.6">1.6</link></para></refsect2>
</refsect1>
<refsect1 id="GstRTSPAuth.see-also">
<title>See Also</title>
<para><link linkend="GstRTSPPermissions"><type>GstRTSPPermissions</type></link>, <link linkend="GstRTSPToken"><type>GstRTSPToken</type></link></para>

</refsect1>

</refentry>
